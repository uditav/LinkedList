ListNode* startingNodeOfCycle(ListNode*head){
      ListNode*slow=head;
      ListNode*fast=head;
      while(fast!=NULL && fast->next!=NULL){
          slow=slow->next;
          fast=fast->next->next;
          if(fast==slow){
              break;
          }
      }
      if(slow!=fast){
          return NULL;
      }
      slow=head;
      fast=fast;
      while(slow!=fast){
         slow=slow->next;
         fast=fast->next;
      }
      return slow;
    }

    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB){
        if(headA==NULL || headB==NULL){
            return NULL;
        }
        ListNode*tailA=headA;
        while(tailA->next!=NULL){
          tailA=tailA->next;
        }
        tailA->next=headB;
        ListNode* ans=startingNodeOfCycle(headA);
        tailA->next=NULL;
        return ans;
    }
